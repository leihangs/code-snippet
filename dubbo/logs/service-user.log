[DEBUG][20170117 11:22:40,223][SpringJUnit4ClassRunner:129] SpringJUnit4ClassRunner constructor called with [class test.user.UserServiceTest]
[DEBUG][20170117 11:22:40,234][BootstrapUtils:96] Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
[DEBUG][20170117 11:22:40,241][BootstrapUtils:79] Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
[DEBUG][20170117 11:22:40,254][BootstrapUtils:146] Instantiating TestContextBootstrapper for test class [test.user.UserServiceTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
[DEBUG][20170117 11:22:40,287][AbstractDelegatingSmartContextLoader:97] Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@50b742d3 declaringClass = 'test.user.UserServiceTest', classes = '{}', locations = '{classpath:dubbo-consumer.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
[DEBUG][20170117 11:22:40,291][ActiveProfilesUtils:84] Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [test.user.UserServiceTest]
[DEBUG][20170117 11:22:40,298][AbstractTestContextBootstrapper:130] @TestExecutionListeners is not present for class [test.user.UserServiceTest]: using defaults.
[INFO ][20170117 11:22:40,304][AbstractTestContextBootstrapper:259] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO ][20170117 11:22:40,322][AbstractTestContextBootstrapper:207] Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
[INFO ][20170117 11:22:40,334][AbstractTestContextBootstrapper:185] Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4f1fc720, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2f4a2e75, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2f301b94, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7f62a9bf, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@26767bef]
[DEBUG][20170117 11:22:40,343][ProfileValueUtils:71] Retrieved @ProfileValueSourceConfiguration [null] for test class [test.user.UserServiceTest]
[DEBUG][20170117 11:22:40,344][ProfileValueUtils:83] Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.user.UserServiceTest]
[DEBUG][20170117 11:22:40,359][ProfileValueUtils:71] Retrieved @ProfileValueSourceConfiguration [null] for test class [test.user.UserServiceTest]
[DEBUG][20170117 11:22:40,360][ProfileValueUtils:83] Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.user.UserServiceTest]
[DEBUG][20170117 11:22:40,361][ProfileValueUtils:71] Retrieved @ProfileValueSourceConfiguration [null] for test class [test.user.UserServiceTest]
[DEBUG][20170117 11:22:40,361][ProfileValueUtils:83] Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.user.UserServiceTest]
[DEBUG][20170117 11:22:40,363][ProfileValueUtils:71] Retrieved @ProfileValueSourceConfiguration [null] for test class [test.user.UserServiceTest]
[DEBUG][20170117 11:22:40,363][ProfileValueUtils:83] Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.user.UserServiceTest]
[DEBUG][20170117 11:22:40,367][AbstractDirtiesContextTestExecutionListener:141] Before test class: context [DefaultTestContext@643293ae testClass = UserServiceTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@347db7e6 testClass = UserServiceTest, locations = '{classpath:dubbo-consumer.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
[DEBUG][20170117 11:22:40,369][ProfileValueUtils:71] Retrieved @ProfileValueSourceConfiguration [null] for test class [test.user.UserServiceTest]
[DEBUG][20170117 11:22:40,369][ProfileValueUtils:83] Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.user.UserServiceTest]
[DEBUG][20170117 11:22:40,371][DependencyInjectionTestExecutionListener:81] Performing dependency injection for test context [[DefaultTestContext@643293ae testClass = UserServiceTest, testInstance = test.user.UserServiceTest@69ddcfef, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@347db7e6 testClass = UserServiceTest, locations = '{classpath:dubbo-consumer.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
[DEBUG][20170117 11:22:40,372][AbstractDelegatingSmartContextLoader:107] Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@347db7e6 testClass = UserServiceTest, locations = '{classpath:dubbo-consumer.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
[DEBUG][20170117 11:22:40,372][AbstractGenericContextLoader:107] Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@347db7e6 testClass = UserServiceTest, locations = '{classpath:dubbo-consumer.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
[DEBUG][20170117 11:22:40,494][MutablePropertySources:109] Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG][20170117 11:22:40,504][MutablePropertySources:109] Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG][20170117 11:22:40,504][AbstractEnvironment:126] Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO ][20170117 11:22:40,518][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [dubbo-consumer.xml]
[DEBUG][20170117 11:22:40,544][DefaultDocumentLoader:73] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG][20170117 11:22:40,601][PluggableSchemaResolver:141] Loading schema mappings from [META-INF/spring.schemas]
[DEBUG][20170117 11:22:40,610][PluggableSchemaResolver:147] Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.alibaba.com/schema/stat.xsd=META-INF/stat.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.1.xsd}
[DEBUG][20170117 11:22:40,618][PluggableSchemaResolver:119] Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.2.xsd
[DEBUG][20170117 11:22:40,668][PluggableSchemaResolver:119] Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG][20170117 11:22:40,722][DefaultBeanDefinitionDocumentReader:92] Loading bean definitions
[DEBUG][20170117 11:22:40,773][DefaultNamespaceHandlerResolver:157] Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.alibaba.com/schema/stat=com.alibaba.druid.support.spring.stat.config.DruidStatNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO ][20170117 11:22:40,781][?:?] using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG][20170117 11:22:40,946][AbstractBeanDefinitionReader:224] Loaded 3 bean definitions from location pattern [classpath:dubbo-consumer.xml]
[INFO ][20170117 11:22:41,001][AbstractApplicationContext:573] Refreshing org.springframework.context.support.GenericApplicationContext@7863d572: startup date [Tue Jan 17 11:22:40 CST 2017]; root of context hierarchy
[DEBUG][20170117 11:22:41,002][AbstractApplicationContext:607] Bean factory for org.springframework.context.support.GenericApplicationContext@7863d572: org.springframework.beans.factory.support.DefaultListableBeanFactory@24cd3f3a: defining beans [dubbo-consumer-user-test,com.alibaba.dubbo.config.RegistryConfig,userClient,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory]; root of factory hierarchy
[DEBUG][20170117 11:22:41,025][DefaultSingletonBeanRegistry:221] Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[DEBUG][20170117 11:22:41,026][AbstractAutowireCapableBeanFactory:448] Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[DEBUG][20170117 11:22:41,053][AbstractAutowireCapableBeanFactory:529] Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
[DEBUG][20170117 11:22:41,056][AbstractAutowireCapableBeanFactory:484] Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[DEBUG][20170117 11:22:41,082][DefaultSingletonBeanRegistry:221] Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[DEBUG][20170117 11:22:41,083][AbstractAutowireCapableBeanFactory:448] Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[DEBUG][20170117 11:22:41,084][AbstractAutowireCapableBeanFactory:529] Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
[DEBUG][20170117 11:22:41,085][AbstractAutowireCapableBeanFactory:484] Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[DEBUG][20170117 11:22:41,085][DefaultSingletonBeanRegistry:221] Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[DEBUG][20170117 11:22:41,085][AbstractAutowireCapableBeanFactory:448] Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[DEBUG][20170117 11:22:41,086][AbstractAutowireCapableBeanFactory:529] Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
[DEBUG][20170117 11:22:41,087][AbstractAutowireCapableBeanFactory:484] Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[DEBUG][20170117 11:22:41,087][DefaultSingletonBeanRegistry:221] Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[DEBUG][20170117 11:22:41,087][AbstractAutowireCapableBeanFactory:448] Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[DEBUG][20170117 11:22:41,093][AbstractAutowireCapableBeanFactory:529] Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
[DEBUG][20170117 11:22:41,093][AbstractAutowireCapableBeanFactory:484] Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[DEBUG][20170117 11:22:41,094][DefaultSingletonBeanRegistry:221] Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
[DEBUG][20170117 11:22:41,094][AbstractAutowireCapableBeanFactory:448] Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
[DEBUG][20170117 11:22:41,095][AbstractAutowireCapableBeanFactory:529] Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
[DEBUG][20170117 11:22:41,095][AbstractAutowireCapableBeanFactory:484] Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
[DEBUG][20170117 11:22:41,095][DefaultSingletonBeanRegistry:221] Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
[DEBUG][20170117 11:22:41,095][AbstractAutowireCapableBeanFactory:448] Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
[DEBUG][20170117 11:22:41,096][AbstractAutowireCapableBeanFactory:529] Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
[DEBUG][20170117 11:22:41,096][AbstractAutowireCapableBeanFactory:484] Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
[DEBUG][20170117 11:22:41,119][AbstractApplicationContext:713] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1ee839f2]
[DEBUG][20170117 11:22:41,121][AbstractApplicationContext:737] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@6cdcb5eb]
[DEBUG][20170117 11:22:41,123][DefaultListableBeanFactory:741] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@24cd3f3a: defining beans [dubbo-consumer-user-test,com.alibaba.dubbo.config.RegistryConfig,userClient,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
[DEBUG][20170117 11:22:41,123][DefaultSingletonBeanRegistry:221] Creating shared instance of singleton bean 'dubbo-consumer-user-test'
[DEBUG][20170117 11:22:41,123][AbstractAutowireCapableBeanFactory:448] Creating instance of bean 'dubbo-consumer-user-test'
[DEBUG][20170117 11:22:41,133][AbstractAutowireCapableBeanFactory:529] Eagerly caching bean 'dubbo-consumer-user-test' to allow for resolving potential circular references
[DEBUG][20170117 11:22:41,177][AbstractAutowireCapableBeanFactory:484] Finished creating instance of bean 'dubbo-consumer-user-test'
[DEBUG][20170117 11:22:41,178][DefaultSingletonBeanRegistry:221] Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG][20170117 11:22:41,178][AbstractAutowireCapableBeanFactory:448] Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG][20170117 11:22:41,183][AbstractAutowireCapableBeanFactory:529] Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG][20170117 11:22:41,191][AbstractAutowireCapableBeanFactory:484] Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG][20170117 11:22:41,192][DefaultSingletonBeanRegistry:221] Creating shared instance of singleton bean 'userClient'
[DEBUG][20170117 11:22:41,192][AbstractAutowireCapableBeanFactory:448] Creating instance of bean 'userClient'
[DEBUG][20170117 11:22:41,251][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][20170117 11:22:41,370][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][20170117 11:22:41,389][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][20170117 11:22:41,413][AbstractAutowireCapableBeanFactory:529] Eagerly caching bean 'userClient' to allow for resolving potential circular references
[DEBUG][20170117 11:22:41,449][AbstractAutowireCapableBeanFactory:1620] Invoking afterPropertiesSet() on bean with name 'userClient'
[DEBUG][20170117 11:22:41,450][AbstractBeanFactory:250] Returning cached instance of singleton bean 'dubbo-consumer-user-test'
[DEBUG][20170117 11:22:41,450][AbstractBeanFactory:250] Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG][20170117 11:22:41,451][AbstractAutowireCapableBeanFactory:484] Finished creating instance of bean 'userClient'
[DEBUG][20170117 11:22:41,452][AbstractBeanFactory:250] Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[DEBUG][20170117 11:22:41,452][AbstractBeanFactory:250] Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[DEBUG][20170117 11:22:41,461][AbstractBeanFactory:250] Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[DEBUG][20170117 11:22:41,461][AbstractBeanFactory:250] Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[DEBUG][20170117 11:22:41,462][DefaultSingletonBeanRegistry:221] Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
[DEBUG][20170117 11:22:41,462][AbstractAutowireCapableBeanFactory:448] Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
[DEBUG][20170117 11:22:41,464][AbstractAutowireCapableBeanFactory:529] Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references
[DEBUG][20170117 11:22:41,467][AbstractAutowireCapableBeanFactory:484] Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
[DEBUG][20170117 11:22:41,468][DefaultSingletonBeanRegistry:221] Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
[DEBUG][20170117 11:22:41,468][AbstractAutowireCapableBeanFactory:448] Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
[DEBUG][20170117 11:22:41,469][AbstractAutowireCapableBeanFactory:529] Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references
[DEBUG][20170117 11:22:41,471][AbstractAutowireCapableBeanFactory:484] Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
[DEBUG][20170117 11:22:41,472][AbstractBeanFactory:250] Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
[DEBUG][20170117 11:22:41,472][AbstractBeanFactory:250] Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
[DEBUG][20170117 11:22:41,473][AbstractBeanFactory:250] Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
[DEBUG][20170117 11:22:41,497][AbstractApplicationContext:764] Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@531bc06a]
[DEBUG][20170117 11:22:41,499][AbstractBeanFactory:250] Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG][20170117 11:22:41,502][PropertySourcesPropertyResolver:81] Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
[DEBUG][20170117 11:22:41,503][PropertySourcesPropertyResolver:81] Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
[DEBUG][20170117 11:22:41,503][PropertySourcesPropertyResolver:103] Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
[DEBUG][20170117 11:22:41,505][DefaultCacheAwareContextLoaderDelegate:118] Storing ApplicationContext in cache under key [[MergedContextConfiguration@347db7e6 testClass = UserServiceTest, locations = '{classpath:dubbo-consumer.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
[DEBUG][20170117 11:22:41,506][DefaultContextCache:247] Spring test ApplicationContext cache statistics: [DefaultContextCache@41feeacb size = 1, parentContextCount = 0, hitCount = 0, missCount = 1]
[DEBUG][20170117 11:22:41,512][InjectionMetadata:86] Processing injected element of bean 'test.user.UserServiceTest': AutowiredFieldElement for com.code.dubbo.user.service.UserService test.user.UserServiceTest.userClient
[DEBUG][20170117 11:22:41,516][AbstractBeanFactory:250] Returning cached instance of singleton bean 'userClient'
[DEBUG][20170117 11:22:41,576][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][20170117 11:22:41,620][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO ][20170117 11:22:41,645][AbstractRegistry:232]  [DUBBO] Load registry store file C:\Users\leihang\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.code.dubbo.user.service.UserService=empty://192.168.190.11:20818/com.code.dubbo.user.service.UserService?anyhost=true&application=demo-service-user&category=configurators&check=false&default.accepts=1000&default.threadpool=fixed&default.threads=100&default.timeout=10000&dubbo=2.5.3&interface=com.code.dubbo.user.service.UserService&methods=getUser,saveUser,deleteUser,updateUser&pid=2664&retries=0&revision=1.0-SNAPSHOT&side=provider&timestamp=1484621144120, com.alibaba.dubbo.monitor.MonitorService=empty://192.168.190.11/com.alibaba.dubbo.monitor.MonitorService?category=providers&dubbo=2.5.3&interface=com.alibaba.dubbo.monitor.MonitorService&pid=2664&timestamp=1484621144193 empty://192.168.190.11/com.alibaba.dubbo.monitor.MonitorService?category=configurators&dubbo=2.5.3&interface=com.alibaba.dubbo.monitor.MonitorService&pid=2664&timestamp=1484621144193 empty://192.168.190.11/com.alibaba.dubbo.monitor.MonitorService?category=routers&dubbo=2.5.3&interface=com.alibaba.dubbo.monitor.MonitorService&pid=2664&timestamp=1484621144193, com.code.doubbo.user.service.UserService=empty://192.168.190.120/com.code.doubbo.user.service.UserService?application=dubbo-consumer-user-test&category=providers&check=false&dubbo=2.5.3&interface=com.code.doubbo.user.service.UserService&methods=getUser,saveUser,deleteUser,updateUser&pid=7376&side=consumer&timestamp=1483496701691 empty://192.168.190.120/com.code.doubbo.user.service.UserService?application=dubbo-consumer-user-test&category=configurators&check=false&dubbo=2.5.3&interface=com.code.doubbo.user.service.UserService&methods=getUser,saveUser,deleteUser,updateUser&pid=7376&side=consumer&timestamp=1483496701691 empty://192.168.190.120/com.code.doubbo.user.service.UserService?application=dubbo-consumer-user-test&category=routers&check=false&dubbo=2.5.3&interface=com.code.doubbo.user.service.UserService&methods=getUser,saveUser,deleteUser,updateUser&pid=7376&side=consumer&timestamp=1483496701691}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][20170117 11:22:41,664][ZkConnection:63] Creating new ZookKeeper instance to connect to 127.0.0.1:2181.
[INFO ][20170117 11:22:41,664][ZkEventThread:64] Starting ZkClient event thread.
[INFO ][20170117 11:22:41,680][Environment:100] Client environment:zookeeper.version=3.4.9-1757313, built on 08/23/2016 06:50 GMT
[INFO ][20170117 11:22:41,680][Environment:100] Client environment:host.name=xxxxx
[INFO ][20170117 11:22:41,680][Environment:100] Client environment:java.version=1.7.0_67
[INFO ][20170117 11:22:41,680][Environment:100] Client environment:java.vendor=Oracle Corporation
[INFO ][20170117 11:22:41,681][Environment:100] Client environment:java.home=C:\Program Files\Java\jdk1.7.0_67\jre
[INFO ][20170117 11:22:41,681][Environment:100] Client environment:java.class.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA 2016.3.1\lib\idea_rt.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA 2016.3.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\Java\jdk1.7.0_67\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_67\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.7.0_67\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.7.0_67\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.7.0_67\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.7.0_67\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.7.0_67\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.7.0_67\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.7.0_67\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.7.0_67\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.7.0_67\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.7.0_67\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_67\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_67\jre\lib\jfxrt.jar;C:\Program Files\Java\jdk1.7.0_67\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_67\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.7.0_67\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.7.0_67\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_67\jre\lib\rt.jar;H:\03_github\code-snippet\dubbo\user-service\target\test-classes;H:\03_github\code-snippet\dubbo\user-service\target\classes;H:\03_github\code-snippet\dubbo\user-facade\target\classes;C:\Users\leihang\.m2\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;C:\Users\leihang\.m2\repository\com\alibaba\dubbo\2.5.3\dubbo-2.5.3.jar;C:\Users\leihang\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\leihang\.m2\repository\org\apache\zookeeper\zookeeper\3.4.9\zookeeper-3.4.9.jar;C:\Users\leihang\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\leihang\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\leihang\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\leihang\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\leihang\.m2\repository\io\netty\netty\3.10.5.Final\netty-3.10.5.Final.jar;C:\Users\leihang\.m2\repository\com\101tec\zkclient\0.3\zkclient-0.3.jar;C:\Users\leihang\.m2\repository\org\mybatis\mybatis\3.4.0\mybatis-3.4.0.jar;C:\Users\leihang\.m2\repository\org\mybatis\mybatis-spring\1.3.0\mybatis-spring-1.3.0.jar;C:\Users\leihang\.m2\repository\org\springframework\spring-core\4.2.0.RELEASE\spring-core-4.2.0.RELEASE.jar;C:\Users\leihang\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\leihang\.m2\repository\org\springframework\spring-beans\4.2.0.RELEASE\spring-beans-4.2.0.RELEASE.jar;C:\Users\leihang\.m2\repository\org\springframework\spring-context\4.2.0.RELEASE\spring-context-4.2.0.RELEASE.jar;C:\Users\leihang\.m2\repository\org\springframework\spring-expression\4.2.0.RELEASE\spring-expression-4.2.0.RELEASE.jar;C:\Users\leihang\.m2\repository\org\springframework\spring-webmvc\4.2.0.RELEASE\spring-webmvc-4.2.0.RELEASE.jar;C:\Users\leihang\.m2\repository\org\springframework\spring-web\4.2.0.RELEASE\spring-web-4.2.0.RELEASE.jar;C:\Users\leihang\.m2\repository\org\springframework\spring-context-support\4.2.0.RELEASE\spring-context-support-4.2.0.RELEASE.jar;C:\Users\leihang\.m2\repository\org\springframework\spring-aop\4.2.0.RELEASE\spring-aop-4.2.0.RELEASE.jar;C:\Users\leihang\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\leihang\.m2\repository\org\springframework\spring-tx\4.2.0.RELEASE\spring-tx-4.2.0.RELEASE.jar;C:\Users\leihang\.m2\repository\org\springframework\spring-jdbc\4.2.0.RELEASE\spring-jdbc-4.2.0.RELEASE.jar;C:\Users\leihang\.m2\repository\org\aspectj\aspectjweaver\1.6.9\aspectjweaver-1.6.9.jar;C:\Users\leihang\.m2\repository\cglib\cglib-nodep\2.2\cglib-nodep-2.2.jar;C:\Users\leihang\.m2\repository\com\alibaba\druid\1.0.24\druid-1.0.24.jar;C:\Program Files\Java\jdk1.7.0_67\lib\tools.jar;C:\Users\leihang\.m2\repository\mysql\mysql-connector-java\5.1.32\mysql-connector-java-5.1.32.jar;C:\Users\leihang\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\leihang\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\leihang\.m2\repository\org\springframework\spring-test\4.2.0.RELEASE\spring-test-4.2.0.RELEASE.jar
[INFO ][20170117 11:22:41,683][Environment:100] Client environment:java.library.path=C:\Program Files\Java\jdk1.7.0_67\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;.;C:\PROGRA~1\Java\jdk1.7.0_67\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\NetSarang;C:\instantclient_12_1;c:\Program Files (x86)\Intel\iCLS Client\;c:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;E:\developmentsoft\apache-maven-3.3.3\bin;E:\developmentsoft\apache-ant-1.9.4\bin;C:\Program Files\MongoDB\Server\3.0\bin;E:\database\mysql-5.6.25-winx64\bin;C:\Program Files (x86)\scala\bin;E:\developmentsoft\apache-cxf-2.7.1\bin;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\Program Files (x86)\MySQL\MySQL Utilities\;C:\Program Files (x86)\MySQL\MySQL Utilities\Doctrine extensions for PHP\;E:\developmentsoft\sonar-runner-2.4\bin;C:\Program Files\VisualSVN Server\bin;C:\strawberry\c\bin;C:\strawberry\perl\bin;E:\developmentsoft\gradle-2.10\bin;H:\04_oschina\sigar;E:\developmentsoft\Python\Python35-32;E:\developmentsoft\kafka_2.11-0.10.1.0\bin\windows;E:\developmentsoft\zookeeper-3.4.9/bin;;C:\Program Files\Docker Toolbox;.
[INFO ][20170117 11:22:41,683][Environment:100] Client environment:java.io.tmpdir=C:\Users\leihang\AppData\Local\Temp\
[INFO ][20170117 11:22:41,683][Environment:100] Client environment:java.compiler=<NA>
[INFO ][20170117 11:22:41,684][Environment:100] Client environment:os.name=Windows 7
[INFO ][20170117 11:22:41,684][Environment:100] Client environment:os.arch=amd64
[INFO ][20170117 11:22:41,684][Environment:100] Client environment:os.version=6.1
[INFO ][20170117 11:22:41,684][Environment:100] Client environment:user.name=leihang
[INFO ][20170117 11:22:41,685][Environment:100] Client environment:user.home=C:\Users\leihang
[INFO ][20170117 11:22:41,685][Environment:100] Client environment:user.dir=H:\03_github\code-snippet\dubbo\user-service
[INFO ][20170117 11:22:41,686][ZooKeeper:438] Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@8c5697a
[DEBUG][20170117 11:22:41,692][ClientCnxn:117] zookeeper.disableAutoWatchReset is false
[DEBUG][20170117 11:22:41,731][ZkClient:878] Awaiting connection to Zookeeper server
[DEBUG][20170117 11:22:41,732][ZkClient:628] Waiting for keeper state SyncConnected
[INFO ][20170117 11:22:41,735][ClientCnxn$SendThread:1032] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO ][20170117 11:22:41,737][ClientCnxn$SendThread:876] Socket connection established to 127.0.0.1/127.0.0.1:2181, initiating session
[DEBUG][20170117 11:22:41,739][ClientCnxn$SendThread:949] Session establishment request sent on 127.0.0.1/127.0.0.1:2181
[INFO ][20170117 11:22:41,816][ClientCnxn$SendThread:1299] Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x159a9dc49c50006, negotiated timeout = 30000
[DEBUG][20170117 11:22:41,818][ZkClient:351] Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO ][20170117 11:22:41,818][ZkClient:449] zookeeper state changed (SyncConnected)
[DEBUG][20170117 11:22:41,818][ZkClient:395] Leaving process event
[DEBUG][20170117 11:22:41,819][ZkClient:638] State is SyncConnected
[DEBUG][20170117 11:22:41,826][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG][20170117 11:22:41,839][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO ][20170117 11:22:41,852][AbstractRegistry:302]  [DUBBO] Register: consumer://192.168.190.11/com.code.dubbo.user.service.UserService?application=dubbo-consumer-user-test&category=consumers&check=false&dubbo=2.5.3&interface=com.code.dubbo.user.service.UserService&methods=getUser,saveUser,deleteUser,updateUser&pid=6140&side=consumer&timestamp=1484623361522, dubbo version: 2.5.3, current host: 192.168.190.11
[DEBUG][20170117 11:22:41,903][ClientCnxn$SendThread:843] Reading reply sessionid:0x159a9dc49c50006, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,738,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG][20170117 11:22:41,985][ClientCnxn$SendThread:843] Reading reply sessionid:0x159a9dc49c50006, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,739,-110  request:: '/dubbo/com.code.dubbo.user.service.UserService,,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG][20170117 11:22:42,055][ClientCnxn$SendThread:843] Reading reply sessionid:0x159a9dc49c50006, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,740,-110  request:: '/dubbo/com.code.dubbo.user.service.UserService/consumers,,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG][20170117 11:22:42,137][ClientCnxn$SendThread:843] Reading reply sessionid:0x159a9dc49c50006, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,741,0  request:: '/dubbo/com.code.dubbo.user.service.UserService/consumers/consumer%253A%252F%252F192.168.190.11%252Fcom.code.dubbo.user.service.UserService%253Fapplication%253Ddubbo-consumer-user-test%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.code.dubbo.user.service.UserService%2526methods%253DgetUser%252CsaveUser%252CdeleteUser%252CupdateUser%2526pid%253D6140%2526side%253Dconsumer%2526timestamp%253D1484623361522,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.code.dubbo.user.service.UserService/consumers/consumer%253A%252F%252F192.168.190.11%252Fcom.code.dubbo.user.service.UserService%253Fapplication%253Ddubbo-consumer-user-test%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.code.dubbo.user.service.UserService%2526methods%253DgetUser%252CsaveUser%252CdeleteUser%252CupdateUser%2526pid%253D6140%2526side%253Dconsumer%2526timestamp%253D1484623361522 
[INFO ][20170117 11:22:42,137][AbstractRegistry:325]  [DUBBO] Subscribe: consumer://192.168.190.11/com.code.dubbo.user.service.UserService?application=dubbo-consumer-user-test&category=providers,configurators,routers&check=false&dubbo=2.5.3&interface=com.code.dubbo.user.service.UserService&methods=getUser,saveUser,deleteUser,updateUser&pid=6140&side=consumer&timestamp=1484623361522, dubbo version: 2.5.3, current host: 192.168.190.11
[DEBUG][20170117 11:22:42,201][ClientCnxn$SendThread:843] Reading reply sessionid:0x159a9dc49c50006, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,742,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG][20170117 11:22:42,261][ClientCnxn$SendThread:843] Reading reply sessionid:0x159a9dc49c50006, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,743,-110  request:: '/dubbo/com.code.dubbo.user.service.UserService,,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG][20170117 11:22:42,311][ClientCnxn$SendThread:843] Reading reply sessionid:0x159a9dc49c50006, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,744,-110  request:: '/dubbo/com.code.dubbo.user.service.UserService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG][20170117 11:22:42,320][ClientCnxn$SendThread:843] Reading reply sessionid:0x159a9dc49c50006, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,744,0  request:: '/dubbo/com.code.dubbo.user.service.UserService/providers,T  response:: s{131,131,1484550906977,1484550906977,0,17,0,0,0,1,720} 
[DEBUG][20170117 11:22:42,326][ClientCnxn$SendThread:843] Reading reply sessionid:0x159a9dc49c50006, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,744,0  request:: '/dubbo/com.code.dubbo.user.service.UserService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.190.11%253A20818%252Fcom.code.dubbo.user.service.UserService%253Fanyhost%253Dtrue%2526application%253Ddemo-service-user%2526default.accepts%253D1000%2526default.threadpool%253Dfixed%2526default.threads%253D100%2526default.timeout%253D10000%2526dubbo%253D2.5.3%2526interface%253Dcom.code.dubbo.user.service.UserService%2526methods%253DgetUser%252CsaveUser%252CdeleteUser%252CupdateUser%2526pid%253D2664%2526retries%253D0%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1484621144120} 
[DEBUG][20170117 11:22:42,377][ClientCnxn$SendThread:843] Reading reply sessionid:0x159a9dc49c50006, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,745,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG][20170117 11:22:42,393][ClientCnxn$SendThread:843] Reading reply sessionid:0x159a9dc49c50006, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,746,-110  request:: '/dubbo/com.code.dubbo.user.service.UserService,,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG][20170117 11:22:42,409][ClientCnxn$SendThread:843] Reading reply sessionid:0x159a9dc49c50006, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,747,-110  request:: '/dubbo/com.code.dubbo.user.service.UserService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG][20170117 11:22:42,411][ClientCnxn$SendThread:843] Reading reply sessionid:0x159a9dc49c50006, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,747,0  request:: '/dubbo/com.code.dubbo.user.service.UserService/configurators,T  response:: s{134,134,1484550907543,1484550907543,0,0,0,0,0,0,134} 
[DEBUG][20170117 11:22:42,411][ClientCnxn$SendThread:843] Reading reply sessionid:0x159a9dc49c50006, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,747,0  request:: '/dubbo/com.code.dubbo.user.service.UserService/configurators,T  response:: v{} 
[DEBUG][20170117 11:22:42,429][ClientCnxn$SendThread:843] Reading reply sessionid:0x159a9dc49c50006, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,748,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG][20170117 11:22:42,459][ClientCnxn$SendThread:843] Reading reply sessionid:0x159a9dc49c50006, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,749,-110  request:: '/dubbo/com.code.dubbo.user.service.UserService,,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG][20170117 11:22:42,485][ClientCnxn$SendThread:843] Reading reply sessionid:0x159a9dc49c50006, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,750,-110  request:: '/dubbo/com.code.dubbo.user.service.UserService/routers,,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG][20170117 11:22:42,486][ClientCnxn$SendThread:843] Reading reply sessionid:0x159a9dc49c50006, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,750,0  request:: '/dubbo/com.code.dubbo.user.service.UserService/routers,T  response:: s{137,137,1484550907814,1484550907814,0,0,0,0,0,0,137} 
[DEBUG][20170117 11:22:42,487][ClientCnxn$SendThread:843] Reading reply sessionid:0x159a9dc49c50006, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,750,0  request:: '/dubbo/com.code.dubbo.user.service.UserService/routers,T  response:: v{} 
[INFO ][20170117 11:22:42,488][AbstractRegistry:422]  [DUBBO] Notify urls for subscribe url consumer://192.168.190.11/com.code.dubbo.user.service.UserService?application=dubbo-consumer-user-test&category=providers,configurators,routers&check=false&dubbo=2.5.3&interface=com.code.dubbo.user.service.UserService&methods=getUser,saveUser,deleteUser,updateUser&pid=6140&side=consumer&timestamp=1484623361522, urls: [dubbo://192.168.190.11:20818/com.code.dubbo.user.service.UserService?anyhost=true&application=demo-service-user&default.accepts=1000&default.threadpool=fixed&default.threads=100&default.timeout=10000&dubbo=2.5.3&interface=com.code.dubbo.user.service.UserService&methods=getUser,saveUser,deleteUser,updateUser&pid=2664&retries=0&revision=1.0-SNAPSHOT&side=provider&timestamp=1484621144120, empty://192.168.190.11/com.code.dubbo.user.service.UserService?application=dubbo-consumer-user-test&category=configurators&check=false&dubbo=2.5.3&interface=com.code.dubbo.user.service.UserService&methods=getUser,saveUser,deleteUser,updateUser&pid=6140&side=consumer&timestamp=1484623361522, empty://192.168.190.11/com.code.dubbo.user.service.UserService?application=dubbo-consumer-user-test&category=routers&check=false&dubbo=2.5.3&interface=com.code.dubbo.user.service.UserService&methods=getUser,saveUser,deleteUser,updateUser&pid=6140&side=consumer&timestamp=1484623361522], dubbo version: 2.5.3, current host: 192.168.190.11
[DEBUG][20170117 11:22:42,505][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.190.11
[DEBUG][20170117 11:22:42,540][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.190.11
[DEBUG][20170117 11:22:42,552][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.190.11
[INFO ][20170117 11:22:42,605][AbstractClient:287]  [DUBBO] Successed connect to server /192.168.190.11:20818 from NettyClient 192.168.190.11 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x0392e8f9, /192.168.190.11:7372 => /192.168.190.11:20818]], dubbo version: 2.5.3, current host: 192.168.190.11
[INFO ][20170117 11:22:42,605][AbstractClient:105]  [DUBBO] Start NettyClient xxxxx/192.168.190.11 connect to the server /192.168.190.11:20818, dubbo version: 2.5.3, current host: 192.168.190.11
[DEBUG][20170117 11:22:42,625][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.190.11
[DEBUG][20170117 11:22:42,635][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.190.11
[DEBUG][20170117 11:22:42,643][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.190.11
[INFO ][20170117 11:22:42,654][ReferenceConfig:423]  [DUBBO] Refer dubbo service com.code.dubbo.user.service.UserService from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubbo-consumer-user-test&check=false&default.accepts=1000&default.timeout=10000&dubbo=2.5.3&interface=com.code.dubbo.user.service.UserService&methods=getUser,saveUser,deleteUser,updateUser&pid=6140&retries=0&revision=1.0-SNAPSHOT&side=consumer&timestamp=1484623361522, dubbo version: 2.5.3, current host: 192.168.190.11
[DEBUG][20170117 11:22:42,661][AutowiredAnnotationBeanPostProcessor:490] Autowiring by type from bean name 'test.user.UserServiceTest' to bean named 'userClient'
[DEBUG][20170117 11:22:42,689][AbstractDirtiesContextTestExecutionListener:106] Before test method: context [DefaultTestContext@643293ae testClass = UserServiceTest, testInstance = test.user.UserServiceTest@69ddcfef, testMethod = saveUser@UserServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@347db7e6 testClass = UserServiceTest, locations = '{classpath:dubbo-consumer.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
[DEBUG][20170117 11:22:43,302][DecodeHandler:60]  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.190.11
[DEBUG][20170117 11:22:43,303][AbstractDirtiesContextTestExecutionListener:106] After test method: context [DefaultTestContext@643293ae testClass = UserServiceTest, testInstance = test.user.UserServiceTest@69ddcfef, testMethod = saveUser@UserServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@347db7e6 testClass = UserServiceTest, locations = '{classpath:dubbo-consumer.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
[DEBUG][20170117 11:22:43,304][ProfileValueUtils:71] Retrieved @ProfileValueSourceConfiguration [null] for test class [test.user.UserServiceTest]
[DEBUG][20170117 11:22:43,304][ProfileValueUtils:83] Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.user.UserServiceTest]
[DEBUG][20170117 11:22:43,305][DependencyInjectionTestExecutionListener:81] Performing dependency injection for test context [[DefaultTestContext@643293ae testClass = UserServiceTest, testInstance = test.user.UserServiceTest@489c5cbd, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@347db7e6 testClass = UserServiceTest, locations = '{classpath:dubbo-consumer.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
[DEBUG][20170117 11:22:43,305][DefaultCacheAwareContextLoaderDelegate:129] Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@347db7e6 testClass = UserServiceTest, locations = '{classpath:dubbo-consumer.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
[DEBUG][20170117 11:22:43,305][DefaultContextCache:247] Spring test ApplicationContext cache statistics: [DefaultContextCache@41feeacb size = 1, parentContextCount = 0, hitCount = 1, missCount = 1]
[DEBUG][20170117 11:22:43,305][InjectionMetadata:86] Processing injected element of bean 'test.user.UserServiceTest': AutowiredFieldElement for com.code.dubbo.user.service.UserService test.user.UserServiceTest.userClient
[DEBUG][20170117 11:22:43,305][AbstractBeanFactory:250] Returning cached instance of singleton bean 'userClient'
[DEBUG][20170117 11:22:43,306][AbstractDirtiesContextTestExecutionListener:106] Before test method: context [DefaultTestContext@643293ae testClass = UserServiceTest, testInstance = test.user.UserServiceTest@489c5cbd, testMethod = updateUser@UserServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@347db7e6 testClass = UserServiceTest, locations = '{classpath:dubbo-consumer.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
[DEBUG][20170117 11:22:44,076][DecodeHandler:60]  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.190.11
[DEBUG][20170117 11:22:44,078][AbstractDirtiesContextTestExecutionListener:106] After test method: context [DefaultTestContext@643293ae testClass = UserServiceTest, testInstance = test.user.UserServiceTest@489c5cbd, testMethod = updateUser@UserServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@347db7e6 testClass = UserServiceTest, locations = '{classpath:dubbo-consumer.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
[DEBUG][20170117 11:22:44,080][ProfileValueUtils:71] Retrieved @ProfileValueSourceConfiguration [null] for test class [test.user.UserServiceTest]
[DEBUG][20170117 11:22:44,080][ProfileValueUtils:83] Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.user.UserServiceTest]
[DEBUG][20170117 11:22:44,081][DependencyInjectionTestExecutionListener:81] Performing dependency injection for test context [[DefaultTestContext@643293ae testClass = UserServiceTest, testInstance = test.user.UserServiceTest@49757d61, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@347db7e6 testClass = UserServiceTest, locations = '{classpath:dubbo-consumer.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
[DEBUG][20170117 11:22:44,082][DefaultCacheAwareContextLoaderDelegate:129] Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@347db7e6 testClass = UserServiceTest, locations = '{classpath:dubbo-consumer.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
[DEBUG][20170117 11:22:44,083][DefaultContextCache:247] Spring test ApplicationContext cache statistics: [DefaultContextCache@41feeacb size = 1, parentContextCount = 0, hitCount = 2, missCount = 1]
[DEBUG][20170117 11:22:44,084][InjectionMetadata:86] Processing injected element of bean 'test.user.UserServiceTest': AutowiredFieldElement for com.code.dubbo.user.service.UserService test.user.UserServiceTest.userClient
[DEBUG][20170117 11:22:44,085][AbstractBeanFactory:250] Returning cached instance of singleton bean 'userClient'
[DEBUG][20170117 11:22:44,087][AbstractDirtiesContextTestExecutionListener:106] Before test method: context [DefaultTestContext@643293ae testClass = UserServiceTest, testInstance = test.user.UserServiceTest@49757d61, testMethod = getUser@UserServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@347db7e6 testClass = UserServiceTest, locations = '{classpath:dubbo-consumer.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
[DEBUG][20170117 11:22:48,990][DecodeHandler:60]  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.190.11
[DEBUG][20170117 11:22:48,992][AbstractDirtiesContextTestExecutionListener:106] After test method: context [DefaultTestContext@643293ae testClass = UserServiceTest, testInstance = test.user.UserServiceTest@49757d61, testMethod = getUser@UserServiceTest, testException = java.lang.RuntimeException: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'operId' not found. Available parameters are [param1, userId]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'operId' not found. Available parameters are [param1, userId]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy13.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:53)
	at com.sun.proxy.$Proxy14.getUser(Unknown Source)
	at com.code.dubbo.user.biz.UserBizService.getUser(UserBizService.java:34)
	at com.code.dubbo.user.service.UserServiceImpl.getUser(UserServiceImpl.java:34)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:64)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:112)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:108)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:84)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:82)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.binding.BindingException: Parameter 'operId' not found. Available parameters are [param1, userId]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:186)
	at org.apache.ibatis.reflection.wrapper.MapWrapper.get(MapWrapper.java:45)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.executor.BaseExecutor.createCacheKey(BaseExecutor.java:220)
	at org.apache.ibatis.executor.CachingExecutor.createCacheKey(CachingExecutor.java:146)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:82)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 35 more
, mergedContextConfiguration = [MergedContextConfiguration@347db7e6 testClass = UserServiceTest, locations = '{classpath:dubbo-consumer.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
[DEBUG][20170117 11:22:49,040][ProfileValueUtils:71] Retrieved @ProfileValueSourceConfiguration [null] for test class [test.user.UserServiceTest]
[DEBUG][20170117 11:22:49,040][ProfileValueUtils:83] Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.user.UserServiceTest]
[DEBUG][20170117 11:22:49,041][DependencyInjectionTestExecutionListener:81] Performing dependency injection for test context [[DefaultTestContext@643293ae testClass = UserServiceTest, testInstance = test.user.UserServiceTest@4bd9c06c, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@347db7e6 testClass = UserServiceTest, locations = '{classpath:dubbo-consumer.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
[DEBUG][20170117 11:22:49,041][DefaultCacheAwareContextLoaderDelegate:129] Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@347db7e6 testClass = UserServiceTest, locations = '{classpath:dubbo-consumer.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
[DEBUG][20170117 11:22:49,041][DefaultContextCache:247] Spring test ApplicationContext cache statistics: [DefaultContextCache@41feeacb size = 1, parentContextCount = 0, hitCount = 3, missCount = 1]
[DEBUG][20170117 11:22:49,042][InjectionMetadata:86] Processing injected element of bean 'test.user.UserServiceTest': AutowiredFieldElement for com.code.dubbo.user.service.UserService test.user.UserServiceTest.userClient
[DEBUG][20170117 11:22:49,042][AbstractBeanFactory:250] Returning cached instance of singleton bean 'userClient'
[DEBUG][20170117 11:22:49,043][AbstractDirtiesContextTestExecutionListener:106] Before test method: context [DefaultTestContext@643293ae testClass = UserServiceTest, testInstance = test.user.UserServiceTest@4bd9c06c, testMethod = deleteUser@UserServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@347db7e6 testClass = UserServiceTest, locations = '{classpath:dubbo-consumer.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
[DEBUG][20170117 11:22:49,055][DecodeHandler:60]  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.190.11
[DEBUG][20170117 11:22:49,057][AbstractDirtiesContextTestExecutionListener:106] After test method: context [DefaultTestContext@643293ae testClass = UserServiceTest, testInstance = test.user.UserServiceTest@4bd9c06c, testMethod = deleteUser@UserServiceTest, testException = java.lang.RuntimeException: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'operId' not found. Available parameters are [param1, userId]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'operId' not found. Available parameters are [param1, userId]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy13.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:311)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:53)
	at com.sun.proxy.$Proxy14.deleteUser(Unknown Source)
	at com.code.dubbo.user.biz.UserBizService.deleteUser(UserBizService.java:30)
	at com.code.dubbo.user.service.UserServiceImpl.deleteUser(UserServiceImpl.java:30)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:64)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:112)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:108)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:84)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:170)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:52)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:82)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.binding.BindingException: Parameter 'operId' not found. Available parameters are [param1, userId]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:186)
	at org.apache.ibatis.reflection.wrapper.MapWrapper.get(MapWrapper.java:45)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:213)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 35 more
, mergedContextConfiguration = [MergedContextConfiguration@347db7e6 testClass = UserServiceTest, locations = '{classpath:dubbo-consumer.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
[DEBUG][20170117 11:22:49,065][AbstractDirtiesContextTestExecutionListener:141] After test class: context [DefaultTestContext@643293ae testClass = UserServiceTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@347db7e6 testClass = UserServiceTest, locations = '{classpath:dubbo-consumer.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
[INFO ][20170117 11:22:49,067][AbstractConfig$1:450]  [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 192.168.190.11
[INFO ][20170117 11:22:49,068][AbstractApplicationContext:951] Closing org.springframework.context.support.GenericApplicationContext@7863d572: startup date [Tue Jan 17 11:22:40 CST 2017]; root of context hierarchy
[INFO ][20170117 11:22:49,069][AbstractRegistryFactory:63]  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-consumer-user-test&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=6140&timestamp=1484623361566], dubbo version: 2.5.3, current host: 192.168.190.11
[INFO ][20170117 11:22:49,069][AbstractRegistry:485]  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-consumer-user-test&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=6140&timestamp=1484623361566, dubbo version: 2.5.3, current host: 192.168.190.11
[DEBUG][20170117 11:22:49,069][AbstractBeanFactory:250] Returning cached instance of singleton bean 'lifecycleProcessor'
[INFO ][20170117 11:22:49,069][AbstractRegistry:312]  [DUBBO] Unregister: consumer://192.168.190.11/com.code.dubbo.user.service.UserService?application=dubbo-consumer-user-test&category=consumers&check=false&dubbo=2.5.3&interface=com.code.dubbo.user.service.UserService&methods=getUser,saveUser,deleteUser,updateUser&pid=6140&side=consumer&timestamp=1484623361522, dubbo version: 2.5.3, current host: 192.168.190.11
[DEBUG][20170117 11:22:49,069][DefaultSingletonBeanRegistry:512] Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@24cd3f3a: defining beans [dubbo-consumer-user-test,com.alibaba.dubbo.config.RegistryConfig,userClient,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
[DEBUG][20170117 11:22:49,070][DefaultSingletonBeanRegistry:568] Retrieved dependent beans for bean 'userClient': [test.user.UserServiceTest]
[DEBUG][20170117 11:22:49,070][DisposableBeanAdapter:248] Invoking destroy() on bean with name 'userClient'
[INFO ][20170117 11:22:49,070][AbstractRegistry:343]  [DUBBO] Unsubscribe: consumer://192.168.190.11/com.code.dubbo.user.service.UserService?application=dubbo-consumer-user-test&category=providers,configurators,routers&check=false&dubbo=2.5.3&interface=com.code.dubbo.user.service.UserService&methods=getUser,saveUser,deleteUser,updateUser&pid=6140&side=consumer&timestamp=1484623361522, dubbo version: 2.5.3, current host: 192.168.190.11
[INFO ][20170117 11:22:49,072][NettyChannel:135]  [DUBBO] Close netty channel [id: 0x0392e8f9, /192.168.190.11:7372 => /192.168.190.11:20818], dubbo version: 2.5.3, current host: 192.168.190.11
[INFO ][20170117 11:22:49,073][DubboProtocol$1:130]  [DUBBO] disconected from /192.168.190.11:20818,url:dubbo://192.168.190.11:20818/com.code.dubbo.user.service.UserService?anyhost=true&application=dubbo-consumer-user-test&check=false&codec=dubbo&default.accepts=1000&default.timeout=10000&dubbo=2.5.3&heartbeat=60000&interface=com.code.dubbo.user.service.UserService&methods=getUser,saveUser,deleteUser,updateUser&pid=6140&retries=0&revision=1.0-SNAPSHOT&side=consumer&timestamp=1484623361522, dubbo version: 2.5.3, current host: 192.168.190.11
[DEBUG][20170117 11:22:49,241][ClientCnxn$SendThread:843] Reading reply sessionid:0x159a9dc49c50006, packet:: clientPath:null serverPath:null finished:false header:: 20,2  replyHeader:: 20,751,0  request:: '/dubbo/com.code.dubbo.user.service.UserService/consumers/consumer%253A%252F%252F192.168.190.11%252Fcom.code.dubbo.user.service.UserService%253Fapplication%253Ddubbo-consumer-user-test%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.code.dubbo.user.service.UserService%2526methods%253DgetUser%252CsaveUser%252CdeleteUser%252CupdateUser%2526pid%253D6140%2526side%253Dconsumer%2526timestamp%253D1484623361522,-1  response:: null
[INFO ][20170117 11:22:49,241][AbstractRegistry:494]  [DUBBO] Destroy unregister url consumer://192.168.190.11/com.code.dubbo.user.service.UserService?application=dubbo-consumer-user-test&category=consumers&check=false&dubbo=2.5.3&interface=com.code.dubbo.user.service.UserService&methods=getUser,saveUser,deleteUser,updateUser&pid=6140&side=consumer&timestamp=1484623361522, dubbo version: 2.5.3, current host: 192.168.190.11
[DEBUG][20170117 11:22:49,241][ZkClient:919] Closing ZkClient...
[INFO ][20170117 11:22:49,242][ZkEventThread:82] Terminate ZkClient event thread.
[DEBUG][20170117 11:22:49,242][ZkConnection:77] Closing ZooKeeper connected to 127.0.0.1:2181
[DEBUG][20170117 11:22:49,242][ZooKeeper:673] Closing session: 0x159a9dc49c50006
[DEBUG][20170117 11:22:49,242][ClientCnxn:1370] Closing client for session: 0x159a9dc49c50006
[DEBUG][20170117 11:22:49,561][ClientCnxn$SendThread:843] Reading reply sessionid:0x159a9dc49c50006, packet:: clientPath:null serverPath:null finished:false header:: 21,-11  replyHeader:: 21,752,0  request:: null response:: null
[DEBUG][20170117 11:22:49,561][ClientCnxn:1354] Disconnecting client for session: 0x159a9dc49c50006
[INFO ][20170117 11:22:49,562][ZooKeeper:684] Session: 0x159a9dc49c50006 closed
[DEBUG][20170117 11:22:49,563][ClientCnxn$SendThread:1146] An exception was thrown while closing send thread for session 0x159a9dc49c50006 : Unable to read additional data from server sessionid 0x159a9dc49c50006, likely server has closed socket
[DEBUG][20170117 11:22:49,563][ZkClient:932] Closing ZkClient...done
[INFO ][20170117 11:22:49,565][DubboProtocol:407]  [DUBBO] Close dubbo connect: 192.168.190.11:0-->192.168.190.11:20818, dubbo version: 2.5.3, current host: 192.168.190.11
[INFO ][20170117 11:22:49,566][DubboProtocol:421]  [DUBBO] Close dubbo connect: 192.168.190.11:0-->192.168.190.11:20818, dubbo version: 2.5.3, current host: 192.168.190.11
[INFO ][20170117 11:22:49,567][ClientCnxn$EventThread:519] EventThread shut down for session: 0x159a9dc49c50006
