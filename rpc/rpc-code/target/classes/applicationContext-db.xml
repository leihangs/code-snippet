<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/c"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
    <!-- 注册 数据库配置文件-->
    <context:property-placeholder location="classpath:db.properties"/>

    <!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
    <context:component-scan base-package="com.code.rpc"/>

    <!-- 数据源配置, 使用druid连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${db.driverClassName}" />
        <property name="url" value="${db.url}" />
        <property name="username" value="${db.username}" />
        <property name="password" value="${db.password}" />
        <property name="filters" value="mergeStat" />
        <!-- 密码解密 -->
        <!-- <property name="filters" value="config" />
        <property name="connectionProperties" value="config.decrypt=true" /> -->
        <!-- 申请连接的时候检测 -->
        <property name="testWhileIdle" value="true"></property>
        <!-- 检测连接 -->
        <property name="validationQuery" value="select 'x'"></property>
        <!--maxActive: 最大连接数量 -->
        <property name="maxActive" value="${db.maxActive}" />
        <!--initialSize: 初始化连接 -->
        <property name="initialSize" value="${db.maxIdle}" />
    </bean>

    <!-- mybatis sqlSessionFactory -->
    <bean id="sqlSessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation"
                  value="classpath:mapper/mybatis-resources.xml"></property>
        <property name="mapperLocations">
            <list>
                <value>classpath:mapper/**/**Mapper.xml</value>
            </list>
        </property>
    </bean>

    <!--jdbcTemplate define -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>

</beans>
